apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "discord-experiencebot.fullname" . }}
  labels:
    {{- include "discord-experiencebot.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "discord-experiencebot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "discord-experiencebot.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "discord-experiencebot.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DATABASE_URL
              value: {{  .Values.database.url | quote }}
            - name: DATABASE_USER
              value: {{  .Values.database.user | quote }}
            - name: DATABASE_PASSWORD
              value: {{  .Values.database.password | quote }}
            - name: DC_TOKEN
              value: {{ .Values.discord.token | quote }}
            - name: SENTRY_DSN
              value: {{ .Values.sentry.dsn | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: postgres
          image: postgres:10.1
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: database
              containerPort: 5432
              protocol: TCP
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
            - name: init-sql-script
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
        - name: init-sql-script
          configMap:
            name: init-sql-script
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
