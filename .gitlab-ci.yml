image: maven:3-jdk-8-slim

stages:
  - build
  - build_docker
  - version
  - deploy

variables:
  GSG_RELEASE_BRANCHES: master, release/*

.default_cache: &default_cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .m2/repository/
    - target

version:
  stage: .pre
  image: registry.gitlab.com/juhani/go-semrel-gitlab:v0.21.1
  variables:
    GIT_FETCH_EXTRA_FLAGS: --tags
  script:
    - echo RELEASE_VERSION=$(release --bump-patch next-version) > version.env
    - source version.env
    - test -n $RELEASE_VERSION
  artifacts:
    paths:
    - version.env
    reports:
      dotenv: version.env
  except:
    - tags

build:
  stage: build
  cache:
    << : *default_cache
  script:
    - cd discord-bot && mvn versions:set -DnewVersion=$RELEASE_VERSION -DprocessAllModules
    - mvn compile assembly:single
  artifacts:
    paths:
    - pom.xml
    - discord-bot/target/*.jar
  except:
    - tags

prepare_chart:
  stage: build
  image: ubuntu
  before_script:
  - apt-get update
  - apt install curl -y
  - curl -LO https://github.com/mikefarah/yq/releases/download/3.3.0/yq_linux_amd64
  - chmod +x yq_linux_amd64 && mv yq_linux_amd64 /bin/yq
  variables:
    GIT_FETCH_EXTRA_FLAGS: --tags
  script:
    - yq w -i chart/Chart.yaml version $RELEASE_VERSION
    - yq w -i chart/Chart.yaml appVersion $RELEASE_VERSION
  artifacts:
    paths:
    - chart/Chart.yaml
  except:
    - tags



build_docker:
  image: quay.io/containers/buildah:latest
  stage: build_docker
  dependencies:
    - version
    - build
  cache:
    << : *default_cache
    policy: pull
  script:
  - mv discord-bot/target/*.jar discord-experiencebot.jar
  - source version.env
  - buildah login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker pull $CI_REGISTRY_IMAGE:latest || true
  - >
    buildah bud --pull
    --tag $CI_REGISTRY_IMAGE:$RELEASE_VERSION
    --cache-from $CI_REGISTRY_IMAGE:latest .
  - buildah push $CI_REGISTRY_IMAGE:$RELEASE_VERSION
  - >
    if [ "$CI_COMMIT_REF_SLUG" == "master" ]; then
      buildah tag $CI_REGISTRY_IMAGE:$RELEASE_VERSION $CI_REGISTRY_IMAGE:latest
      buildah push $CI_REGISTRY_IMAGE:latest
    fi
  - buildah login -u $GITHUBUSER -p ${GITHUBTOKEN} ghcr.io
  - buildah tag $CI_REGISTRY_IMAGE:$RELEASE_VERSION $GITHUB_REGISTRY_IMAGE:$RELEASE_VERSION 
  - buildah push $GITHUB_REGISTRY_IMAGE:$RELEASE_VERSION 
  - >
    if [ "$CI_COMMIT_REF_SLUG" == "master" ]; then
      buildah tag $GITHUB_REGISTRY_IMAGE:$RELEASE_VERSION  $GITHUB_REGISTRY_IMAGE:latest
      buildah push $GITHUB_REGISTRY_IMAGE:latest
    fi
  except:
  - tags

version_tag:
  stage: version
  image: registry.gitlab.com/juhani/go-semrel-gitlab:v0.21.1
  variables:
    GIT_FETCH_EXTRA_FLAGS: --tags
  script:
    - echo "RELEASE_URL=https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/jobs/$CI_JOB_ID/artifacts/release" > build_info
    - echo "RELEASE_DESC=\"$(uname -mo) binary\"" >> build_info
    - echo "RELEASE_SHA=$CI_COMMIT_SHA" >> build_info
    - echo "RELEASE_VERSION=$RELEASE_VERSION" >> build_info
    - rm -f release_info
    - mv build_info release_info
    - . release_info
    - release changelog
    - release commit-and-tag chart/Chart.yaml pom.xml CHANGELOG.md release_info
    - release --ci-commit-tag v$RELEASE_VERSION add-download-link --name release --url $RELEASE_URL --description "$RELEASE_DESC"
  artifacts:
    paths:
    - release_info
    - chart/Chart.yaml
    - pom.xml
    - CHANGELOG.md
  except:
    - tags

.default_deploy: &default_deploy
  stage: deploy
  image: alpine
  before_script:
  - apk --no-cache add curl openssl bash
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
  - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
  - chmod +x kubectl && mv kubectl /bin/kubectl
  dependencies:
  - version

deploy_kubernetes_staging:
  << : *default_deploy
  dependencies:
    - version
    - build
  environment:
    name: discord-experiencebot
    on_stop: stop
  script:
  - - source version.env
  - >
    helm upgrade -i --set discord.token=$DISCORD_TOKEN
    discord-experiencebot ./chart
  only:
    - master

stop:
  << : *default_deploy
  when: manual
  environment:
    name: discord-experiencebot
    action: stop
  script:
  - helm delete discord-experiencebot