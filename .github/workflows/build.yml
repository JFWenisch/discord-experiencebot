name: Build

on:
  push:
    branches: 
      - "main" 
      - "develop" 
      - "feature/*" 
  pull_request:
    branches: [ "main, develop" ]

jobs:
    
  version:
    runs-on: ubuntu-latest
    outputs:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        changelog: ${{ steps.tag_version.outputs.changelog }}
    steps:
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.0
      with:
        github_token: ${{ secrets.GITHUBTOKEN }}
  
  build:
    runs-on: ubuntu-latest
    needs: version
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: cd discord-bot && mvn versions:set -DnewVersion=${{needs.version.outputs.tag}} && mvn -B package --file pom.xml
    
            
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUBTOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ghcr.io/jfwenisch/discord-experiencebot
        
      
    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ghcr.io/jfwenisch/discord-experiencebot:${{needs.version.outputs.tag}}
          ghcr.io/jfwenisch/discord-experiencebot:latest
        labels: ${{ steps.meta.outputs.labels }}


    - name: Update Helm chart version
      run:  |
        yq eval '.appVersion = "${{ needs.version.outputs.tag }}"' -i chart/Chart.yaml
        yq eval '.version = "${{ needs.version.outputs.tag }}"' -i chart/Chart.yaml

    - name: Commit and push updated Helm chart
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add chart/Chart.yaml
        git commit -m "[skip ci] Update Helm chart appVersion to ${{ needs.version.outputs.tag }}"
        git push origin ${{ github.ref }}

    - name: Package Helm chart
      run: helm package chart/ --destination ./release


    - name: Upload Helm chart artifact
      uses: actions/upload-artifact@v4
      with:
        name: helm-chart
        path: ./release/*.tgz
        
    - name: Clone charts repository
      env:
        GH_TOKEN: ${{ secrets.GITHUBTOKEN }}
      run: |
        git clone https://$GH_TOKEN@github.com/JFWenisch/charts.git
        cp ./release/*.tgz charts/discord-experiencebot/
        cd charts
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m "Add discord-experiencebot chart in version ${{ needs.version.outputs.tag }}"
        git push https://$GH_TOKEN@github.com/JFWenisch/charts.git main


  release:
    runs-on: ubuntu-latest
    needs:  [version, build]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3

    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{needs.version.outputs.tag}}
        name: Release ${{needs.version.outputs.tag}}
        body: ${{needs.version.outputs.changelog}}
